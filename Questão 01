Questão 01

Execute os comandos para criar os 4 bancos de dados listados com containers, e use
como se tivesse instalado eles localmente na sua máquina (Não esquece de garantir
que não vai perder os dados caso o container seja excluido).

MongoDB
MariaDB
PostgreSQL
Redis


================================

MongoDB

- Buscar no dockerhub a imagem
    https://hub.docker.com/_/mongo

Environment
MONGO_INITDB_ROOT_USERNAME
MONGO_INITDB_ROOT_PASSWORD



docker volume create mongodb_q1

docker container run --name mongodb_q1 -v mongovol_q1:/data/db -p 27017:27017 -d -e MONGO_INITDB_ROOT_USERNAME=mongouser -e  MONGO_INITDB_ROOT_PASSWORD=mongopwd  mongo:4.4.3




==================================

MariaDB

https://hub.docker.com/_/mariadb


docker volume create phpmyadminvol_q1
docker network create maria_phpmyadmin

docker run --name phpmyadmin -v phpmyadminvol_q1:/data/db --network maria_phpmyadmin -p 8080:80 -e PMA_ARBITRARY=1 -d phpmyadmin

docker run --name mariadb_q1 -v mariadb:/var/lib/mysql --network maria_phpmyadmin -p 3306:3306 -e MARIADB_ROOT_PASSWORD=mariapwd -d mariadb


==================================

PostgreSQL

https://hub.docker.com/_/postgres

docker volume create pgadminvol_q1
docker network create postgre_pgadmin_net


Usuario: postgres

docker run --name postgres -e POSTGRES_PASSWORD=postgrepwd -v postgrevol_q1:/var/lib/postgresql/data -p 5432:5432  --network postgre_pgadmin_net -d postgres


https://hub.docker.com/r/dpage/pgadmin4/

docker run -p 80:80 \
    -e 'PGADMIN_DEFAULT_EMAIL=user@domain.com' \
    -e 'PGADMIN_DEFAULT_PASSWORD=SuperSecret' \
    --network postgre_pgadmin_net \
    -v pgadminvol_q1:/var/lib/pgadmin \
    -d dpage/pgadmin4



    ================================

    Redis

    https://hub.docker.com/_/redis

    docker volume create rediscommandervol_q1
    docker network create redis_rediscommander_net

    ### Sem senha  #### Sem segurança
    docker run --name some-redis --network redis_rediscommander_net -p 6379:6379 -d redis 


    https://hub.docker.com/r/rediscommander/redis-commander


    docker run --rm --name redis-commander -d \
  -p 8081:8081  -v rediscommandervol_q1\
  --network redis_rediscommander_net \
  rediscommander/redis-commander:latest